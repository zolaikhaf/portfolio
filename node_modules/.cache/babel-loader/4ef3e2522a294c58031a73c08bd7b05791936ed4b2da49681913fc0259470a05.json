{"ast":null,"code":"var _jsxFileName = \"/Users/zolaikhaafzal/zoloportfolio/src/Cta.js\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport typingVideo from './typing.mp4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cta = () => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    id: \"CtaContainer\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"MainAnimationContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"AboutMe\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              id: \"MainGreeting\",\n              children: \"Hi, I'm Zolaikha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              id: \"MainTagline\",\n              children: \"Software Engineer & Experienced Leader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"light\",\n              href: \"#myWork\",\n              size: \"lg\",\n              children: \"More About Me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"MainAnimationOverlay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"MainAnimation\",\n            playsInline: true,\n            autoPlay: true,\n            muted: true,\n            loop: true,\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: typingVideo,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Cta;\nexport default Cta;\nvar _c;\n$RefreshReg$(_c, \"Cta\");","map":{"version":3,"names":["Container","Row","Col","Button","typingVideo","jsxDEV","_jsxDEV","Cta","id","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","href","size","playsInline","autoPlay","muted","loop","src","type","_c","$RefreshReg$"],"sources":["/Users/zolaikhaafzal/zoloportfolio/src/Cta.js"],"sourcesContent":["import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport typingVideo from './typing.mp4';\n\nconst Cta = () => {\n\n  return (\n    \n    <Container id=\"CtaContainer\">\n\n      <Row>\n\n        <Col>\n\n          <div id=\"MainAnimationContainer\">\n            \n            <div id=\"AboutMe\">\n\n              <h1 id=\"MainGreeting\">Hi, I'm Zolaikha</h1>\n              <h5 id=\"MainTagline\">Software Engineer &amp; Experienced Leader</h5>\n            \n              <Button variant=\"light\" href=\"#myWork\" size=\"lg\">More About Me</Button>\n\n            </div>\n            \n            <div id=\"MainAnimationOverlay\"></div>\n\n            <video id=\"MainAnimation\" playsInline autoPlay muted loop>\n              <source src={typingVideo} type=\"video/mp4\"/>\n            </video>\n\n          </div>\n\n        </Col>\n\n      </Row>\n\n    </Container>\n\n  );\n};\n\nexport default Cta;\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,MAAM,MAAM,wBAAwB;AAE3C,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAEhB,oBAEED,OAAA,CAACN,SAAS;IAACQ,EAAE,EAAC,cAAc;IAAAC,QAAA,eAE1BH,OAAA,CAACL,GAAG;MAAAQ,QAAA,eAEFH,OAAA,CAACJ,GAAG;QAAAO,QAAA,eAEFH,OAAA;UAAKE,EAAE,EAAC,wBAAwB;UAAAC,QAAA,gBAE9BH,OAAA;YAAKE,EAAE,EAAC,SAAS;YAAAC,QAAA,gBAEfH,OAAA;cAAIE,EAAE,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3CP,OAAA;cAAIE,EAAE,EAAC,aAAa;cAAAC,QAAA,EAAC;YAA0C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAEpEP,OAAA,CAACH,MAAM;cAACW,OAAO,EAAC,OAAO;cAACC,IAAI,EAAC,SAAS;cAACC,IAAI,EAAC,IAAI;cAAAP,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEpE,CAAC,eAENP,OAAA;YAAKE,EAAE,EAAC;UAAsB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAErCP,OAAA;YAAOE,EAAE,EAAC,eAAe;YAACS,WAAW;YAACC,QAAQ;YAACC,KAAK;YAACC,IAAI;YAAAX,QAAA,eACvDH,OAAA;cAAQe,GAAG,EAAEjB,WAAY;cAACkB,IAAI,EAAC;YAAW;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEG,CAAC;AAGhB,CAAC;AAACU,EAAA,GApCIhB,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}